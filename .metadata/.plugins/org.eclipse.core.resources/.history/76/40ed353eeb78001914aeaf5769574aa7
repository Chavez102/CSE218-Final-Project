package controllers;

import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.ResourceBundle;

import Data_Management.Stock;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;

public class Range_Result_Page_Controller implements Initializable{

    @FXML
    private Button Back_btn;

    @FXML
    private Button Menu_btn;

    @FXML
    private TableView<Stock> Table_VIew;

    @FXML
    private TableColumn<Stock, String> Date_column;

    @FXML
    private TableColumn<Stock, Double> Open_column;

    @FXML
    private TableColumn<Stock, Double> High_column;

    @FXML
    private TableColumn<Stock, Double> Low_Column;

    @FXML
    private TableColumn<Stock, Double> Close_Column;

    @FXML
    private TableColumn<Stock, Double> Volume_column;


	@Override
	public void initialize(URL arg0, ResourceBundle arg1) 
	{
		System.out.println("hello");
		Date_column.setCellValueFactory(new PropertyValueFactory<Stock,String>("Date_column"));
		Open_column.setCellValueFactory(new PropertyValueFactory<Stock,Double>("Open_column"));
		High_column.setCellValueFactory(new PropertyValueFactory<Stock,Double>("High_column"));
		Low_Column.setCellValueFactory(new PropertyValueFactory<Stock,Double>("Low_Column"));
		Close_Column.setCellValueFactory(new PropertyValueFactory<Stock,Double>("Close_Column"));
		Volume_column.setCellValueFactory(new PropertyValueFactory<Stock,Double>("Volume_column"));
		

		
		ArrayList<Date> dateRangelist=getDates(controllers.Range_Page_Controller.begin_date,
										  controllers.Range_Page_Controller.End_date);
		ObservableList<Stock> list = FXCollections.<Stock>observableArrayList();


		  for(Date date:dateRangelist)
		    {
			  String datestr= dateFormat.format(date);
			  if(controllers.Search_Page_Controller.WeekDayChosen(datestr)==true)
			  {
				  list.add(application.Main.map.get(datestr));

			  }
		    }
		  
		  Table_VIew.setItems(list);
		  
		  

	}
	
	
	
	public void fillChoicebox(int firstnum,int lastnum,ChoiceBox<Integer> choicebox) {
		ObservableList<Integer> list = FXCollections.<Integer>observableArrayList();
	    for( int i=firstnum; i<lastnum; i++ ) 
	    {
	    	list.add(i);   
	    }
	    
	    
		choicebox.setValue(firstnum + (int)(Math.random() * ((lastnum - firstnum) + 1)));
		choicebox.setItems(list);
		
	}
	
	
	public static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    public static ArrayList<Date> getDates(String fromDate, String toDate)				//Gets Range from-to
	 {
	    ArrayList<Date> dates = new ArrayList<Date>();

	    try {

	        Calendar fromCal = Calendar.getInstance();
	        fromCal.setTime(dateFormat .parse(fromDate));

	        Calendar toCal = Calendar.getInstance();
	        toCal.setTime(dateFormat .parse(toDate));

	        while(!fromCal.after(toCal))
	        {
	            dates.add(fromCal.getTime());
	            fromCal.add(Calendar.DATE, 1);
	        }} catch (Exception e) {
	        System.out.println(e);
	    }
	    return dates;
	 }
	
	
	
    @FXML
    void Back_btn_Clicked(ActionEvent event) 
    {
    	application.Main.SwitchPageto(event, "Range_Page.fxml");
    	
    }

    @FXML
    void Menu_btn_Clicked(ActionEvent event) {
    	
    	
     	application.Main.SwitchPageto(event, "Menu_Page.fxml");
    }
	
	
	
	

}
